// A:=A+B (soma destrutiva)
operation soma(A,B){
1: if zero B then goto 0 else goto 2
2: do dec B goto 3
3: do inc A goto 1
}

// A:=A+B (soma não-destrutiva)
operation somaND(A,B,C){
1: if zero B then goto 5 else goto 2
2: do dec B goto 3
3: do inc A goto 4
4: do inc C goto 1
5: if zero C then goto 0 else goto 6
6: do dec C goto 7
7: do inc B goto 5
}

// limpa variável
operation clear(A){
1: if zero A then goto 0 else goto 2
2: do dec A goto 1
}

// A:=B (atribuição destrutiva)
operation load(A,B){
1: do clear(A) goto 2
2: do soma(A,B) goto 0
}

// A:=B usando C (atribuição não-destrutiva)
operation loadND(A,B,C){
1: do clear(A) goto 2
2: do somaND(A,B,G) goto 0
}

// A:=AxB usando C,D
operation mult(A,B,C,D){
1: do load(C,A) goto 2
2: if zero C then goto 0 else goto 3
3: do somaND(A,B,F) goto 4
4: do dec C goto 2
}

operation square(A){
1: do loadND(Q,A,W) goto 2
2: do mult(A,Q,U,K) goto 0
}

operation exp(A,B){
1: do loadND(C,B,D) goto 2
2: do dec C goto 3
3: do loadND(R,A,J) goto 4
4: if zero C then goto 0 else goto 5
5: do mult(A,R,N,Z) goto 6
6: do dec C goto 4
}

// A:=A-B usando C (subtração conservativa)
operation subtrai(A,B,C){
1: do load(C,B) goto 2
2: if zero C then goto 0 else goto 3
3: do dec C goto 4
4: do inc B goto 5
5: do dec A goto 2
}

main{
//    1: do loadND(B,X,P) goto 2
1: do add B 3 goto 2
2: do loadND(A,X,P) goto 3
3: do exp(A,B) goto 4
4: do subtrai(A,X,C) goto 5
5: do load(Y,A) goto 0
}