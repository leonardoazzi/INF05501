// A:=A+B (soma destrutiva)
operation soma(A,B){
1: if zero B then goto 0 else goto 2
2: do dec B goto 3
3: do inc A goto 1
}

// A:=A+B (soma não-destrutiva)
operation somaND(A,B,C){
1: if zero B then goto 5 else goto 2
2: do dec B goto 3
3: do inc A goto 4
4: do inc C goto 1
5: if zero C then goto 0 else goto 6
6: do dec C goto 7
7: do inc B goto 5
}

// limpa variável
operation clear(A){
1: if zero A then goto 0 else goto 2
2: do dec A goto 1
}

// A:=B (atribuição destrutiva)
operation load(A,B){
1: do clear(A) goto 2
2: do soma(A,B) goto 0
}

// A:=B usando C (atribuição não-destrutiva)
operation loadND(A,B,C){
1: do clear(A) goto 2
2: do somaND(A,B,C) goto 0
}

// A:=AxB usando C,D
operation mult(A,B,C,D){
1: do load(C,A) goto 2
2: if zero C then goto 0 else goto 3
3: do somaND(A,B,D) goto 4
4: do dec C goto 2
}

// B:=AxA usando C,E
operation square(A,B,C,D){
    1: do loadND(B,A,C) goto 2
    2: do mult(B,A,C,D) goto 0
}

operation exp(A,B){
1: do loadND(C,B,E) goto 2
2: do dec C goto 3
3: do loadND(D,A,F) goto 4
4: if zero C then goto 0 else goto 5
5: do mult(A,D,G,H) goto 6
6: do dec C goto 4
}

// Teste A<B?
test less_than(A, B, C, D){
    1: do loadND(C, A, E) goto 2
    2: do loadND(D, B, E)  goto 3
    3: if zero C then goto 4 else goto 5
    4: if zero D then goto false else goto true
    5: do dec C goto 6
    6: do dec D goto 3
}

// Teste A>B?
test more_than(A, B, C, D){
    1: do loadND(C, A, E) goto 2
    2: do loadND(D, B, E)  goto 3
    3: if zero C then goto 4 else goto 5
    4: if zero D then goto true else goto false
    5: do dec C goto 6
    6: do dec D goto 3
}

// Teste A=B?
test equal(A, B, C, D){
    1: do loadND(C, A, E) goto 2
    2: do loadND(D, B, E)  goto 3
    3: if zero C then goto 4 else goto 5
    4: if zero D then goto true else goto false
    5: if zero D then goto 6 else goto 7
    6: if zero C then goto true else goto false
    7: do dec C goto 8
    8: do dec D goto 3
}

// Teste A<=B?
test less_or_equal(A, B){
    1: do loadND(C, A, E) goto 2
    2: do loadND(D, B, E)  goto 3
    3: if zero C then goto 4 else goto 5
    4: if zero D then goto true else goto true
    5: if zero D then goto 6 else goto 7
    6: if zero C then goto true else goto false
    7: do dec C goto 8
    8: do dec D goto 3
}

operation sqrt(A){
    1: do clear(B) goto 2
    2: if less_or_equal(B,A) then goto 3 else goto 8
    3: do inc C_ goto 4
    4: do loadND(F,C_,A1) goto 5
    5: do loadND(G,C_,A2) goto 6
    6: do mult(F,G,A3,A4) goto 7
    7: do load(B,F) goto 2
    8: do dec C_ goto 9
    9: do load(A,C_) goto 0
}

test div_by_2(A){
    1: do load(C,A) goto 2
    2: if zero C then goto true else goto 3
    3: do dec C goto 4
    4: do inc A goto 5
    5: if zero C then goto false else goto 6
    6: do inc A goto 7
    7: do dec C goto 2
}

test perfect_square(input){
    1: if less_or_equal(i,input) then goto 2 else goto false
    2: do square(i,isquare,aux1,aux2) goto 3
    3: if equal(input,isquare,aux3,aux4) then goto true else goto 4
    4: do inc i goto 1
}

main{
    1: if perfect_square(X) then goto 3 else goto 4
    3: do load(Y,i) goto 0  
    4: do clear(Y) goto 0
}

